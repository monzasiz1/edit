<!DOCTYPE html>
<html lang="de">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title><%= typeof title !== 'undefined' ? title : 'Spie√übuch' %></title>

  <!-- Manifest + Icons -->
  <link rel="manifest" href="/manifest.json">
  <meta name="theme-color" content="#ffffff">
  <meta name="apple-mobile-web-app-capable" content="yes">
  <meta name="apple-mobile-web-app-status-bar-style" content="default">
  <meta name="apple-mobile-web-app-title" content="Spie√übuch">
  <link rel="apple-touch-icon" href="/icons/logo-192.png">
  <link rel="apple-touch-icon" href="/logo.png">

  <!-- CSS -->
  <link rel="stylesheet" href="/style.css" />
  <link rel="stylesheet" href="/hamburger.css">
  <style>
    html { scroll-behavior: smooth; }
    .btn-push {
      background-color: var(--green-dark, #7a8450);
      color: white;
      font-weight: bold;
      padding: 0.6rem 1.2rem;
      border: none;
      border-radius: 10px;
      cursor: pointer;
      font-size: 1rem;
      transition: background-color 0.3s ease;
      display: inline-block;
      margin: 1rem auto;
    }
    .btn-push:hover {
      background-color: #64703e;
    }
  </style>
</head>

<body>
  <nav class="main-nav">
    <a href="/" class="logo logo-large">
      <img src="/logo.png" alt="Logo" /> Spie√übuch
    </a>

    <% if (user) { %>
      <button class="hamburger-btn" id="hamburger-btn" aria-label="Men√º √∂ffnen">
        <span></span><span></span><span></span>
      </button>

      <ul id="main-menu">
        <li><a href="/dashboard">Dashboard</a></li>
        <% if (user.is_admin) { %>
          <li><a href="/penalties">Strafen</a></li>
          <li><a href="/users">Nutzer</a></li>
        <% } %>
        <li><a href="/profil">Profil</a></li>
        <li><a href="/ranking">Ranking</a></li>
        <li><a href="/export">Export</a></li>
        <li><a href="/strafenkatalog.pdf" target="_blank" rel="noopener">üìÑ Strafenkatalog</a></li>
        <li>
          <form action="/logout" method="POST" style="display:inline; margin:0;">
            <button type="submit" class="btn btn-logout btn-icon" title="Logout" style="background:none; border:none; padding:0; cursor:pointer;">
              <svg width="22" height="22" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2.1" stroke-linecap="round" stroke-linejoin="round" style="vertical-align:middle;display:inline-block">
                <path d="M9 16l-1.5-1.5M9 16l1.5-1.5M9 16h7"/>
                <path d="M16 12v-6a2 2 0 0 0-2-2h-4a2 2 0 0 0-2 2v6"/>
                <polyline points="19 16 22 12 19 8"/>
                <line x1="22" y1="12" x2="9" y2="12"/>
              </svg>
            </button>
          </form>
        </li>
      </ul>
    <% } %>
  </nav>

  <% if (typeof noContainer !== 'undefined' && noContainer) { %>
    <main><%- body %></main>
  <% } else { %>
    <main class="container"><%- body %></main>
  <% } %>

  <footer class="footer">
    &copy; <%= new Date().getFullYear() %> GutSchlag Spie√übuch v.1.0 by RS
  </footer>

  <script src="/menu.js"></script>
  
  <% if (user) { %>
  <script>
    const PUBLIC_VAPID_KEY = 'BMNz5-yJd5D66IWYpt1jP6XWdodPJF-54HxRY34-15-D8zAc24G8P3lhsx8VHDfuWKwT1ZQi-Y9l12z7irijHVA';

    // Nur auf Dashboard anzeigen
    if (window.location.pathname === '/dashboard') {
      const isIos = /iphone|ipad|ipod/.test(navigator.userAgent.toLowerCase());
      const isStandalone = ('standalone' in navigator) && navigator.standalone;

      if (isIos && !isStandalone) {
        alert('üì± Um Push-Benachrichtigungen zu erhalten, installiere die App √ºber "Teilen" > "Zum Home-Bildschirm".');
      }

      // Funktion zum Umwandeln des VAPID-Keys
      function urlB64ToUint8Array(base64String) {
        const padding = '='.repeat((4 - base64String.length % 4) % 4);
        const base64 = (base64String + padding).replace(/-/g, '+').replace(/_/g, '/');
        const rawData = window.atob(base64);
        return Uint8Array.from([...rawData].map(c => c.charCodeAt(0)));
      }

      navigator.serviceWorker.ready.then(async reg => {
        const sub = await reg.pushManager.getSubscription();

        if (!sub) {
          // Button erzeugen
          const btn = document.createElement('button');
          btn.innerHTML = 'üîî<span class="text"> Push aktivieren</span>';
          btn.className = 'push-btn';
          document.body.appendChild(btn);

          // CSS direkt einf√ºgen
          const style = document.createElement('style');
          style.textContent = `
            .push-btn {
              position: fixed;
              bottom: 1rem;
              right: 1rem;
              padding: 0.6em 1.2em;
              font-size: 0.9rem;
              background: #607848;
              color: white;
              border: none;
              border-radius: 2rem;
              cursor: pointer;
              opacity: 0.7;
              z-index: 1000;
              transition: all 0.3s ease;
              box-shadow: 0 2px 6px rgba(0,0,0,0.2);
            }
            .push-btn:hover {
              opacity: 1;
              transform: scale(1.03);
            }
            .push-btn .text {
              margin-left: 0.4em;
              font-weight: 500;
              opacity: 0;
              transition: opacity 0.3s ease;
            }
            .push-btn:hover .text {
              opacity: 1;
            }
            @media (max-width: 500px) {
              .push-btn .text {
                display: none;
              }
            }
          `;
          document.head.appendChild(style);

          // Klick ‚Üí Subscribe
          btn.addEventListener('click', async () => {
            try {
              const permission = await Notification.requestPermission();
              if (permission !== 'granted') {
                alert('üîï Push-Benachrichtigungen wurden blockiert.');
                return;
              }

              const newSub = await reg.pushManager.subscribe({
                userVisibleOnly: true,
                applicationServerKey: urlB64ToUint8Array(PUBLIC_VAPID_KEY)
              });

              const res = await fetch('/subscribe', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify(newSub)
              });

              if (res.ok) {
                btn.remove();
                alert('‚úÖ Push erfolgreich aktiviert.');
              } else {
                alert('‚ùå Fehler beim Speichern.');
              }
            } catch (err) {
              console.error('Push-Fehler:', err);
              alert('‚ùå Push-Aktivierung fehlgeschlagen.');
            }
          });
        } else {
          // Bereits abonniert ‚Üí still erneut senden
          await fetch('/subscribe', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify(sub)
          });
        }
      });
    }
  </script>
<% } %>


</body>
</html>
