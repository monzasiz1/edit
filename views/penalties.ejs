<main class="strikeboard-app">
  <header class="strikeboard-hero">
    <div class="strikeboard-gradient-bg"></div>
    <div class="strikeboard-header-content">
      <span class="strikeboard-icon">üìù</span>
      <div>
        <h1 class="strikeboard-title">Strafen √úbersicht</h1>
        <div class="strikeboard-subline">Alle Mitglieder ¬∑ Stand <span><%= new Date().toLocaleDateString('de-DE') %></span></div>
      </div>
      <a href="/penalties/add" class="strikeboard-add-btn" title="Strafe hinzuf√ºgen">+</a>
    </div>
    <div class="strikeboard-statistics">
      <div class="strikeboard-stat fadein-up" style="--order:1">
        <div class="stat-label">Strafen gesamt</div>
        <div class="stat-value big"><%= strafen.length %></div>
      </div>
      <div class="strikeboard-stat fadein-up" style="--order:2">
        <div class="stat-label">Summe</div>
        <div class="stat-value highlight"><%= strafen.reduce((s, p) => s + Number(p.amount), 0).toFixed(2) %>‚ÄØ‚Ç¨</div>
      </div>
    </div>
  </header>

  <section class="strikeboard-list">
    <% 
      const grouped = {};
      strafen.forEach(s => {
        if (!grouped[s.user_name]) grouped[s.user_name] = [];
        grouped[s.user_name].push(s);
      });
      Object.entries(grouped).forEach(([username, userStrafen], idx) => { 
    %>
    <div class="strikeboard-user-card fadein-up" style="--order:<%= idx+3 %>">
      <button class="usercard-head" tabindex="0">
        <span class="user-avatar-lg"><%= username[0].toUpperCase() %></span>
        <span class="user-name"><%= username %></span>
        <span class="user-strike-count"><%= userStrafen.length %></span>
        <span class="chevron">&#8250;</span>
      </button>
      <div class="usercard-content">
        <% if (userStrafen.length > 0) { %>
        <ul class="strike-ultra-list">
          <% userStrafen.forEach(strafe => { %>
            <li class="strike-ultra-row">
              <span class="strike-status-dot <%= strafe.status %>"></span>
              <span class="strike-date"><%= new Date(strafe.created_at).toLocaleDateString() %></span>
              <span class="strike-event"><%= strafe.event || '' %></span>
              <span class="strike-reason"><%= strafe.reason %></span>
              <span class="strike-amount"><%= strafe.amount.toFixed(2) %>‚ÄØ‚Ç¨</span>
              <% if (user.is_admin) { %>
                <span class="strike-row-actions">
                  <a href="/penalties/edit/<%= strafe.id %>" class="strike-action-icon" title="Bearbeiten">‚úèÔ∏è</a>
                  <form action="/penalties/delete/<%= strafe.id %>" method="POST" style="display:inline">
                    <button type="submit" class="strike-action-icon danger" onclick="return confirm('Wirklich l√∂schen?')" title="L√∂schen">üóëÔ∏è</button>
                  </form>
                </span>
              <% } %>
            </li>
          <% }) %>
        </ul>
        <% } else { %>
          <div class="strikeboard-empty">Keine Strafen</div>
        <% } %>
      </div>
    </div>
    <% }) %>
  </section>
</main>

<style>
:root {
  --apple-bg: linear-gradient(115deg,#f7fff9 0%,#e9f6fb 100%);
  --glass-blur: 12px;
  --strike-green: #16e080;
  --strike-red: #fe495c;
  --widget-grad: linear-gradient(93deg, #e3ffe7 0%, #c8ebfa 100%);
  --avatar-grad: linear-gradient(128deg,#6bffec 10%,#3b8bff 90%);
  --widget-shadow: 0 8px 32px #38bde630;
  --highlight: #16e080;
  --danger: #fe495c;
}
html,body { background: var(--apple-bg); min-height: 100vh; }
.strikeboard-app {
  max-width: 900px;
  margin: 2.2rem auto 2rem auto;
  padding: 0 1.4rem;
  font-family: 'SF Pro Display', 'Inter', 'Segoe UI', 'Arial', sans-serif;
}
.strikeboard-hero {
  position: relative;
  padding: 2.2rem 1.6rem 2.1rem 1.6rem;
  border-radius: 2.2em;
  box-shadow: var(--widget-shadow);
  background: var(--widget-grad);
  margin-bottom: 2.3rem;
  overflow: hidden;
  isolation: isolate;
  animation: fadein 1.0s cubic-bezier(.4,0,0,1.12);
}
.strikeboard-gradient-bg {
  position: absolute;
  inset: 0;
  background: radial-gradient(ellipse at 82% 15%, #b8f7ff 0%,#e0ffe7 100%);
  filter: blur(36px) brightness(1.19);
  opacity: 0.59;
  z-index: 1;
}
.strikeboard-header-content {
  position: relative; z-index: 2;
  display: flex; align-items: flex-start; gap: 1.2rem; margin-bottom: 0.6rem;
}
.strikeboard-icon {
  font-size: 2.3em; margin-right: 0.2em; margin-top: -0.13em;
  background: linear-gradient(120deg,#38e2ff 10%, #31ffa6 80%);
  border-radius: 0.8em; box-shadow: 0 4px 14px #3bffae21;
  padding: 0.3em 0.28em 0.17em 0.28em;
  color: #222;
  animation: fadein-top 1.3s cubic-bezier(.18,0,.33,1.18);
}
.strikeboard-title {
  font-size: 2.6rem;
  font-weight: 900;
  background: linear-gradient(90deg,#222,#31ffa6 90%);
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  background-clip: text;
  margin: 0 0 0.13em 0;
  letter-spacing: -1px;
  animation: fadein-top 1.25s cubic-bezier(.19,.1,.43,1.17);
}
.strikeboard-subline {
  font-size: 1.11rem;
  font-weight: 600;
  color: #25b889;
  opacity: 0.82;
}
.strikeboard-add-btn {
  margin-left: auto;
  font-size: 2.1rem;
  font-weight: 700;
  width: 2.15em; height: 2.15em;
  background: linear-gradient(120deg,#16e080 10%,#5cd8f6 90%);
  box-shadow: 0 6px 24px #1efc9244;
  border-radius: 50%;
  color: #fff;
  border: none;
  display: flex; align-items: center; justify-content: center;
  text-decoration: none;
  transition: background 0.14s, box-shadow 0.13s;
  animation: fadein-right 1.1s cubic-bezier(.14,.2,0,1.2);
}
.strikeboard-add-btn:hover { background: linear-gradient(118deg,#0ed377,#3dcfff 85%); box-shadow: 0 8px 26px #38d8a925; }

.strikeboard-statistics {
  display: flex; gap: 1.7rem; margin-top: 0.8rem;
}
.strikeboard-stat {
  background: rgba(255,255,255,0.92);
  border-radius: 1.6em; min-width: 136px; min-height: 64px;
  box-shadow: 0 2px 18px #23d6be13;
  padding: 0.83em 1.5em 0.82em 1.11em;
  display: flex; flex-direction: column; align-items: flex-start;
  font-weight: 600; font-size: 1.09em; position: relative; margin-right: 0.14em;
  border: 1.6px solid #e9f3f3;
  opacity: 0;
  transform: translateY(22px);
  animation: fadein-up 0.9s cubic-bezier(.28,.7,0,1.2) forwards;
  animation-delay: calc(var(--order, 1) * 0.09s);
}
.stat-label { color: #8ec0a7; font-size: 1em; margin-bottom: 0.19em; font-weight: 600;}
.stat-value { font-size: 2.06em; font-weight: 900; color: #13c074; letter-spacing: -0.06em; }
.stat-value.big { font-size: 2.55em; color: #222;}
.stat-value.highlight { color: var(--highlight);}
@keyframes fadein-up {
  from { opacity:0; transform: translateY(22px);}
  to { opacity:1; transform: translateY(0);}
}
@keyframes fadein-top {
  from { opacity:0; transform: translateY(-44px);}
  to { opacity:1; transform: translateY(0);}
}
@keyframes fadein-right {
  from { opacity:0; transform: translateX(44px);}
  to { opacity:1; transform: translateX(0);}
}
@keyframes fadein {
  from { opacity:0; }
  to { opacity:1; }
}

.strikeboard-list { display: flex; flex-direction: column; gap: 1.33rem; }
.strikeboard-user-card {
  border-radius: 21px;
  box-shadow: 0 2px 22px #16e08019;
  background: #fff; transition: box-shadow 0.22s;
  overflow: hidden; border: 1.3px solid #e2f2ee;
  margin-bottom: 0; animation: fadein-up 0.99s cubic-bezier(.48,.15,0,1.12);
  opacity: 0;
  transform: translateY(28px);
  animation-fill-mode: forwards;
  animation-delay: calc(var(--order, 3) * 0.08s);
}
.strikeboard-user-card.open { box-shadow: 0 4px 32px #16e08029; border-color: #16e08055; }
.usercard-head {
  display: flex; align-items: center; width: 100%;
  gap: 1.11rem; padding: 1.18rem 1.19rem;
  background: none; border: none; outline: none;
  cursor: pointer; font-size: 1.12rem; font-weight: 700; color: #193b27; transition: background 0.18s; position: relative;
}
.user-avatar-lg {
  background: var(--avatar-grad);
  color: #fff;
  width: 2.6em; height: 2.6em; display: flex; align-items: center; justify-content: center;
  border-radius: 50%; font-weight: 900; font-size: 1.13em; letter-spacing: 0.4px; box-shadow: 0 3px 11px #6bffec18;
}
.user-name { flex: 1; font-size: 1.05em; font-weight: 700; color: #1d2727; letter-spacing: -0.6px; }
.user-strike-count { background: #fff; color: #16e080; font-size: 1.09em; padding: 0.13em 0.62em; border-radius: 1.3em; margin-right: 0.6em; font-weight: 800; border: 1.5px solid #e2f2ee; box-shadow: 0 1px 8px #13c07421;}
.chevron { font-size: 1.8em; color: #c0c6d5; margin-right: 0.3em; transition: transform 0.34s cubic-bezier(.7,.3,0,1.4);}
.strikeboard-user-card.open .chevron { transform: rotate(90deg);}
.usercard-content { max-height: 0; overflow: hidden; opacity: 0; transition: max-height 0.58s cubic-bezier(.7,.3,0,1.4), opacity 0.34s; background: #fafdfe; border-top: 1px solid #f3f6fa;}
.strikeboard-user-card.open .usercard-content { max-height: 620px; opacity: 1; transition: max-height 0.64s cubic-bezier(.7,.3,0,1.2), opacity 0.41s;}
.strike-ultra-list { list-style: none; margin: 0; padding: 0;}
.strike-ultra-row { display: flex; align-items: center; gap: 1.3vw; padding: 0.54em 0.6em; border-bottom: 1px solid #f2f3f4; font-size: 1.07em;}
.strike-date { min-width: 84px; color: #656874; font-variant-numeric: tabular-nums; }
.strike-event { min-width: 94px; color: #14b788; }
.strike-reason { flex: 1; color: #24282b; }
.strike-amount { min-width: 75px; color: #183a32; font-weight: 700; letter-spacing: 0.04em; }
.strike-status-dot { display: inline-block; width: 1em; height: 1em; border-radius: 50%; margin-left: 0.19em; margin-right: 0.39em; }
.strike-status-dot.bezahlt { background: var(--strike-green); box-shadow: 0 0 16px 3.5px #25e78980; }
.strike-status-dot.offen { background: var(--strike-red); box-shadow: 0 0 24px 6.5px #fe495c73; animation: status-pulse 1.35s infinite cubic-bezier(.6,.2,0,1.2);}
@keyframes status-pulse {
  0%, 100% { box-shadow: 0 0 20px 5px #fd525299; }
  50% { box-shadow: 0 0 30px 11px #fe495c; }
}
.strike-row-actions { margin-left: 0.8em; display: flex; gap: 0.13em; }
.strike-action-icon { border: none; background: none; font-size: 1.11em; cursor: pointer; color: #b9c5d5; padding: 0.14em 0.08em; border-radius: 50%; transition: background 0.13s, color 0.13s;}
.strike-action-icon:hover { color: #1adf7d; background: #e2faf0; }
.strike-action-icon.danger:hover { color: #d72626; background: #fff4f4; }
.strikeboard-empty { padding: 1.2rem 1rem; color: #aaa; text-align: center; font-size: 0.96em; font-style: italic;}

@media (max-width: 700px) {
  .strikeboard-app { padding: 0 0.05rem;}
  .strikeboard-hero { padding: 1.22rem 0.22rem 1.22rem 0.22rem; border-radius: 1.08em;}
  .strikeboard-header-content { gap: 0.3rem; }
  .strikeboard-title { font-size: 1.19rem;}
  .strikeboard-icon { font-size: 1.25em;}
  .strikeboard-statistics { gap: 0.7rem;}
  .strikeboard-stat { min-width: 74px; font-size: 0.94em; padding: 0.41em 0.7em 0.41em 0.46em;}
  .usercard-head { font-size: 0.94rem; padding: 0.67rem 0.11rem;}
  .user-avatar-lg { width: 1.24em; height: 1.24em; font-size: 0.81em;}
  .strike-ultra-row { font-size: 0.82em;}
  .strike-event { min-width: 39px;}
  .strike-date { min-width: 55px;}
}
</style>
<script>
document.addEventListener('DOMContentLoaded', () => {
  document.querySelectorAll('.usercard-head').forEach(toggle => {
    toggle.addEventListener('click', () => {
      const card = toggle.closest('.strikeboard-user-card');
      const isOpen = card.classList.contains('open');
      document.querySelectorAll('.strikeboard-user-card').forEach(c => c.classList.remove('open'));
      if (!isOpen) card.classList.add('open');
    });
  });
});
</script>
